// <auto-generated />
using System;
using GearGenie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GearGenie.Migrations
{
    [DbContext(typeof(GearContext))]
    [Migration("20241106182815_GearInit")]
    partial class GearInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArmorCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("DamageDice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DamageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DexBonus")
                        .HasColumnType("bit");

                    b.Property<string>("GearCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasVariant")
                        .HasColumnType("bit");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVariant")
                        .HasColumnType("bit");

                    b.Property<bool?>("MagicItem")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxDexBonus")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ParentEquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("RangeCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RangeLong")
                        .HasColumnType("int");

                    b.Property<int?>("RangeNormal")
                        .HasColumnType("int");

                    b.Property<string>("Rarity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecialAttribute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StealthDisadvantage")
                        .HasColumnType("bit");

                    b.Property<int?>("StrengthMinimum")
                        .HasColumnType("int");

                    b.Property<int?>("ThrowRangeLong")
                        .HasColumnType("int");

                    b.Property<int?>("ThrowRangeNormal")
                        .HasColumnType("int");

                    b.Property<string>("ToolCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwoHandedDamageDice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwoHandedDamageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeaponRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("ParentEquipmentId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.EquipmentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.EquipmentWeaponProperty", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("WeaponPropertyId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId", "WeaponPropertyId");

                    b.HasIndex("WeaponPropertyId");

                    b.ToTable("EquipmentWeaponProperties");
                });

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.PackContent", b =>
                {
                    b.Property<int>("PackId")
                        .HasColumnType("int");

                    b.Property<int>("ContentId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("PackId", "ContentId");

                    b.HasIndex("ContentId");

                    b.ToTable("PackContents");
                });

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.WeaponProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("WeaponProperties");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Admins")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.CampaignShop", b =>
                {
                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("CampaignId", "ShopId");

                    b.HasIndex("ShopId");

                    b.ToTable("CampaignShops");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.PlayerCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PlayerCharacters");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.PlayerItem", b =>
                {
                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "PlayerCharacterId");

                    b.HasIndex("PlayerCharacterId");

                    b.ToTable("PlayerItems");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.ShopItem", b =>
                {
                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ShopSection")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.Equipment", b =>
                {
                    b.HasOne("GearGenie.Models.EquipmentModels.Equipment", "ParentEquipment")
                        .WithMany("Variants")
                        .HasForeignKey("ParentEquipmentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentEquipment");
                });

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.EquipmentWeaponProperty", b =>
                {
                    b.HasOne("GearGenie.Models.EquipmentModels.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GearGenie.Models.EquipmentModels.WeaponProperty", "WeaponProperty")
                        .WithMany()
                        .HasForeignKey("WeaponPropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("WeaponProperty");
                });

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.PackContent", b =>
                {
                    b.HasOne("GearGenie.Models.EquipmentModels.Equipment", "ContentEquipment")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GearGenie.Models.EquipmentModels.Equipment", "PackEquipment")
                        .WithMany("PackContents")
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ContentEquipment");

                    b.Navigation("PackEquipment");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.CampaignShop", b =>
                {
                    b.HasOne("GearGenie.Models.InventoryModels.Campaign", "Campaign")
                        .WithMany("Shops")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GearGenie.Models.InventoryModels.Shop", "Shop")
                        .WithMany()
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.PlayerItem", b =>
                {
                    b.HasOne("GearGenie.Models.EquipmentModels.Equipment", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GearGenie.Models.InventoryModels.PlayerCharacter", "PlayerCharacter")
                        .WithMany("Items")
                        .HasForeignKey("PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PlayerCharacter");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.ShopItem", b =>
                {
                    b.HasOne("GearGenie.Models.EquipmentModels.Equipment", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GearGenie.Models.InventoryModels.Shop", "Shop")
                        .WithMany("Items")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("GearGenie.Models.EquipmentModels.Equipment", b =>
                {
                    b.Navigation("PackContents");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.Campaign", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.PlayerCharacter", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("GearGenie.Models.InventoryModels.Shop", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
